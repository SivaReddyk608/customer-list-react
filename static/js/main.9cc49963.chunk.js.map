{"version":3,"sources":["components/CustomerList/CustomerList.js","components/CustomerList/index.js","utils/customerUtils.js","App.js","index.js"],"names":["RenderTableData","data","map","row","id","monthStats","name","totalBonus","RenderTableHeader","CustomerList","memoizedCustomers","useMemo","formattedCustomers","customers","forEach","customer","customerTransactions","transactions","filter","transaction","customerId","groupedTransactions","_","groupBy","moment","parseInt","createdAt","format","newCustomer","Object","entries","month","monthlyTransactions","bonus","amount","values","reduce","prev","next","push","getCustomerDataFormatted","App","ReactDOM","render","document","getElementById"],"mappings":"k7BAKMA,EAAkB,SAAC,GACvB,OADoC,EAAXC,KACbC,KAAI,SAACC,GAAS,IAChBC,EAAqCD,EAArCC,GAAIC,EAAiCF,EAAjCE,WAAYC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,WAC9B,OACE,+BACE,6BAAKH,IACL,6BAAKE,IACL,8BAAe,OAAVD,QAAU,IAAVA,OAAA,EAAAA,EAAa,aAAc,IAChC,8BAAe,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAa,aAAc,IAChC,8BAAe,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAa,aAAc,IAChC,6BAAKE,MANEH,OAYTI,EAAoB,kBACxB,qCACE,oCACA,sCACA,0CACA,0CACA,0CACA,2CC1BWC,MD6BA,WACb,IAAMC,EAAoBC,mBAAQ,kBE1BI,WACtC,IAAIC,EAAqB,GA6BzB,OA5BAC,EAAUC,SAAQ,SAAAC,GAChB,IAAMC,EAAuBC,EAAaC,QACxC,SAAAC,GAAW,OAAIA,EAAYC,aAAeL,EAASX,MAEjDiB,EAAsBC,IAAEC,QAAQP,GAAsB,SACxDG,GAGA,OADaK,IAAOC,SAASN,EAAYO,YAC7BC,OAAO,cAEjBC,EAAW,eAAQb,GACvBc,OAAOC,QAAQT,GAAqBP,SAClC,YAAmC,IAAD,mBAAhCiB,EAAgC,KAAzBC,EAAyB,KAC5BC,EAAQ,EACZD,EAAoBlB,SAAQ,SAAAK,GAAgB,IAClCe,EAAWf,EAAXe,OACRD,EAAQ,GAAKC,EAAS,KAA6B,IAApBA,EAAS,GAAM,MAGhDN,EAAYvB,WAAZ,2BAA8BuB,EAAYvB,YAA1C,kBAAuD0B,EAAQE,OAGnEL,EAAYrB,WAAasB,OAAOM,OAAOP,EAAYvB,YAAY+B,QAC7D,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IACvB,GAEF1B,EAAmB2B,KAAKX,MAEnBhB,EFJiC4B,KAA4B,IAEpE,OACE,gCACE,wDACA,uBAAOpC,GAAG,YAAV,SACE,kCACE,6BACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAiBH,KAAMS,aGrClB,SAAS+B,IACtB,OACE,8BACE,cAAC,EAAD,MCHNC,IAASC,OAAO,cAACF,EAAD,IAASG,SAASC,eAAe,U","file":"static/js/main.9cc49963.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport \"./style.css\";\n\nimport { getCustomerDataFormatted } from \"../../utils/customerUtils\";\n\nconst RenderTableData = ({ data }) => {\n  return data.map((row) => {\n    const { id, monthStats, name, totalBonus } = row;\n    return (\n      <tr key={id}>\n        <td>{id}</td>\n        <td>{name}</td>\n        <td>{monthStats?.[\"01/2021\"] || 0}</td>\n        <td>{monthStats?.[\"02/2021\"] || 0}</td>\n        <td>{monthStats?.[\"03/2021\"] || 0}</td>\n        <td>{totalBonus}</td>\n      </tr>\n    );\n  });\n};\n\nconst RenderTableHeader = () => (\n  <>\n    <th>Id</th>\n    <th>Name</th>\n    <th>Jan-2021</th>\n    <th>Feb-2021</th>\n    <th>Mar-2021</th>\n    <th>Total</th>\n  </>\n);\nexport default function CustomerList() {\n  const memoizedCustomers = useMemo(() => getCustomerDataFormatted(), []);\n\n  return (\n    <div>\n      <h1>Customer Bonus Points!</h1>\n      <table id=\"customers\">\n        <tbody>\n          <tr>\n            <RenderTableHeader />\n          </tr>\n          <RenderTableData data={memoizedCustomers} />\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import CustomerList from \"./CustomerList\";\n\nexport default CustomerList;\n","import _ from \"lodash\";\nimport moment from \"moment\";\n\nimport customers from \"../data/customers.json\";\nimport transactions from \"../data/transactions.json\";\n\nexport const getCustomerDataFormatted = () => {\n  let formattedCustomers = [];\n  customers.forEach(customer => {\n    const customerTransactions = transactions.filter(\n      transaction => transaction.customerId === customer.id\n    );\n    var groupedTransactions = _.groupBy(customerTransactions, function(\n      transaction\n    ) {\n      const date = moment(parseInt(transaction.createdAt));\n      return date.format(\"MM/YYYY\");\n    });\n    let newCustomer = { ...customer };\n    Object.entries(groupedTransactions).forEach(\n      ([month, monthlyTransactions]) => {\n        let bonus = 0;\n        monthlyTransactions.forEach(transaction => {\n          const { amount } = transaction;\n          bonus = 2 * (amount - 100) + ((amount % 50) - 1) * 50;\n        });\n\n        newCustomer.monthStats = { ...newCustomer.monthStats, [month]: bonus };\n      }\n    );\n    newCustomer.totalBonus = Object.values(newCustomer.monthStats).reduce(\n      (prev, next) => prev + next,\n      0\n    );\n    formattedCustomers.push(newCustomer);\n  });\n  return formattedCustomers;\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nimport CustomerList from \"./components/CustomerList\";\n\nexport default function App() {\n  return (\n    <div>\n      <CustomerList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}